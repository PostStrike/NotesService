sort(indexes.begin(), indexes.end());
			int new_x = 0;
			for(int i = indexes.size() - 1; i >= 0; --i) {
				int ind = indexes[i];

				std::string file_path = "../img/symbol_images_" + std::to_string(font_size) + "/" + std::to_string(static_cast<int>(sym)) + ".png";

				Letter obj;
				obj.child = gtk_image_new_from_file(file_path.c_str());  
				obj.container = gtk_fixed_new();
				obj.size = grid[copy_y][ind].real_size;
				obj.x = grid[copy_y][ind].x;
				obj.y = grid[copy_y][ind].y;
				obj.sym = grid[copy_y][ind].sym;

				grid[y].push_back(obj);
				grid[copy_y].erase(grid[copy_y].begin() + ind);

				gtk_fixed_put(GTK_FIXED(grid[y][grid[y].size() - 1].container), grid[y][grid[y].size() - 1].child, new_x, y);
				
				gtk_overlay_add_overlay(GTK_OVERLAY(box), grid[y][grid[y].size() - 1].container);

				grid[y].back().move();
			}
